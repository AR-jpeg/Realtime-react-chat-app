{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\OneDrive\\\\code\\\\chat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPONT = 'localhost:5000/';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPONT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      alert(`There was an error, ${error}`);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPONT, location.search]);\n  useEffect(function () {\n    socket.on('message', (user, message) => {\n      setMessages([...messages, message]);\n    }, [messages]);\n  });\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    onKeyPress: e => e.key === 'Enter' ? sendMessage(e) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Owner/OneDrive/code/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPONT","parse","search","emit","error","alert","off","on","user","sendMessage","event","preventDefault","e","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMe,OAAO,GAAG,iBAAhB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAAvB;AAEAb,IAAAA,MAAM,GAAGD,EAAE,CAACY,OAAD,CAAX;AACAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEX,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoCU,KAAK,IAAI;AAC3CC,MAAAA,KAAK,CAAE,uBAAsBD,KAAM,EAA9B,CAAL;AACD,KAFD;AAIA,WAAO,MAAM;AACXf,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACAd,MAAAA,MAAM,CAACiB,GAAP;AACD,KAHD;AAID,GAfQ,EAeN,CAACN,OAAD,EAAUT,QAAQ,CAACW,MAAnB,CAfM,CAAT;AAiBAhB,EAAAA,SAAS,CAAC,YAAW;AACnBG,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAqB,CAACC,IAAD,EAAOZ,OAAP,KAAmB;AACtCG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACD,KAFD,EAEG,CAACE,QAAD,CAFH;AAGD,GAJQ,CAAT;;AAMA,QAAMW,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIf,OAAJ,EAAa;AACXP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACD;AACF,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAED,OAAd;AAAuB,IAAA,QAAQ,EAAGgB,CAAD,IAAOf,UAAU,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlD;AAAoE,IAAA,UAAU,EAAEF,CAAC,IAAIA,CAAC,CAACG,GAAF,KAAU,OAAV,GAAoBN,WAAW,CAACG,CAAD,CAA/B,GAAqC,IAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CA7CD;;AA+CA,eAAetB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport queryString from 'query-string'\r\nimport io from 'socket.io-client'\r\n\r\nlet socket\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState('')\r\n  const [room, setRoom] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [messages, setMessages] = useState([])\r\n\r\n  const ENDPONT = 'localhost:5000/'\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search)\r\n\r\n    socket = io(ENDPONT)\r\n    setName(name)\r\n    setRoom(room)\r\n\r\n    socket.emit('join', { name, room }, error => {\r\n      alert(`There was an error, ${error}`)\r\n    })\r\n\r\n    return () => {\r\n      socket.emit('disconnect')\r\n      socket.off()\r\n    }\r\n  }, [ENDPONT, location.search])\r\n\r\n  useEffect(function() {\r\n    socket.on('message', (user, message) => {\r\n      setMessages([...messages, message])\r\n    }, [messages])\r\n  })\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault()\r\n    if (message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n        <input value={message} onChange={(e) => setMessage(e.target.value)} onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}></input>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}