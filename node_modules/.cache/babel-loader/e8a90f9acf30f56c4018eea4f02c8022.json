{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\OneDrive\\\\code\\\\chat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000/';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n\n      console.log(`Joined to the server with name: ${name}, room: ${room}`);\n    });\n    socket.on('message', ({\n      user,\n      text\n    }) => {\n      console.log(name, text);\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(function () {\n    socket.on('message', (user, message) => {\n      setMessages([...messages, message]);\n    }, [messages]);\n  });\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    onKeyPress: e => e.key === 'Enter' ? sendMessage(e) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Owner/OneDrive/code/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","console","log","on","user","text","sendMessage","event","preventDefault","e","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMe,QAAQ,GAAG,iBAAjB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAAvB;AAEAb,IAAAA,MAAM,GAAGD,EAAE,CAACY,QAAD,CAAX;AAEAL,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAH,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEX,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoCU,KAAK,IAAI;AAC3C,UAAIA,KAAJ,EAAW;AACTC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAa,mCAAkCf,IAAK,WAAUE,IAAK,EAAnE;AACD,KALD;AAOAL,IAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAqB,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,KAAoB;AACvCJ,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ,EAAkBkB,IAAlB;AACD,KAFD;AAGD,GAlBQ,EAkBN,CAACV,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAlBM,CAAT;AAoBAhB,EAAAA,SAAS,CAAC,YAAY;AACpBG,IAAAA,MAAM,CAACmB,EAAP,CACE,SADF,EAEE,CAACC,IAAD,EAAOb,OAAP,KAAmB;AACjBG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACD,KAJH,EAKE,CAACE,QAAD,CALF;AAOD,GARQ,CAAT;;AAUA,QAAMa,WAAW,GAAGC,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIjB,OAAJ,EAAa;AACXP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACD;AACF,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAED,OADT;AAEE,IAAA,QAAQ,EAAEkB,CAAC,IAAIjB,UAAU,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;AAGE,IAAA,UAAU,EAAEF,CAAC,IAAKA,CAAC,CAACG,GAAF,KAAU,OAAV,GAAoBN,WAAW,CAACG,CAAD,CAA/B,GAAqC,IAHzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAWD,CAxDD;;AA0DA,eAAexB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport queryString from 'query-string'\r\nimport io from 'socket.io-client'\r\n\r\nlet socket\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState('')\r\n  const [room, setRoom] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [messages, setMessages] = useState([])\r\n\r\n  const ENDPOINT = 'localhost:5000/'\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search)\r\n\r\n    socket = io(ENDPOINT)\r\n\r\n    setRoom(room)\r\n    setName(name)\r\n\r\n    socket.emit('join', { name, room }, error => {\r\n      if (error) {\r\n        alert(error)\r\n      }\r\n      console.log(`Joined to the server with name: ${name}, room: ${room}`)\r\n    })\r\n\r\n    socket.on('message', ({ user, text }) => {\r\n      console.log(name, text)\r\n    })\r\n  }, [ENDPOINT, location.search])\r\n\r\n  useEffect(function () {\r\n    socket.on(\r\n      'message',\r\n      (user, message) => {\r\n        setMessages([...messages, message])\r\n      },\r\n      [messages]\r\n    )\r\n  })\r\n\r\n  const sendMessage = event => {\r\n    event.preventDefault()\r\n    if (message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='outerContainer'>\r\n      <div className='container'>\r\n        <input\r\n          value={message}\r\n          onChange={e => setMessage(e.target.value)}\r\n          onKeyPress={e => (e.key === 'Enter' ? sendMessage(e) : null)}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}